$set csv_path '/Users/michalajeldorf/Desktop/Data/'

Sets
g generator /g1*g10/
t time in hours /t1*t696/
s scenarios /s1*s45/
;

Alias (t,h)
;

Table data_1(t,*)
$ondelim
$include %csv_path%Data for consumption januar 2024.csv
$offdelim
;

Table P(t,s)
$ondelim
$include %csv_path%Data_scenarier.csv
$offdelim
;

Table data(g,*) 'Parameters that depend on generator g'
        cu    cv   cstart  cshut   UT   DT   xmin  xmax  eCO2      
   g1   82   12.1   42.6   42.6    3    2    80    200   5       
   g2   49   12.6   50.6   50.6    4    2    120   320   4.24    
   g3   100  13.2   57.1   57.1    3    2    50    150   2.15     
   g4   105  13.9   47.1   47.1    5    3    250   520   3.99    
   g5   72   13.5   56.6   56.6    4    2    80    280   5        
   g6   29   15.4   141.5  141.5   3    2    50    150   4.24     
   g7   32   14     113.5  113.5   3    2    30    120   2.15     
   g8   40   13.5   42.6   42.6    3    2    30    110   3.99     
   g9   25   15     50.6   50.6    0    0    20    240   5        
   g10  12   14.3   57.1   57.1    0    0    20    180   4.24     
;

Variables
u(g,t) aktivitet for generator g til tid t
v(g,t) opstartsbeslutning for generator g til tid t
w(g,t) nedlukningsbeslutning for generator g til tid t
x(g,t) energioutput af ikke-vedvarende energi for generator g til tid t
xstor(t) lagerniveau til tid t
xstorout(t) energioutflow fra lagerenheden til tid t
xstorin(t) energiindstrømning til lagerenheden til tid t
xstorina(t) faktisk energiindstrømning til lagerenheden til tid t
xstorouta(t) faktisk energioutflow fra lagerenheden til tid t
a(t) ikke-imødekommen elektricitet til tid t
b(t) overskydende energi til tid t
z objektfunktionsværdi
;

Parameters
R(s) z to each scenarie
Ps(t) vindenergi
JA(s,t)
;

Binary Variables
u(g,t), v(g,t), w(g,t)
;

Positive Variables
x(g,t), xstor(t), xstorout(t), xstorin(t), xstorina(t), xstorouta(t), a(t), b(t)
;

u.fx(g,'t1') = 1;
v.fx(g,'t1') = 1;
w.fx(g,'t1') = 0;
xstor.fx('t1') = 800;
xstorin.fx('t1') = 0;
xstorout.fx('t1') = 0;

Scalars
Cstor lageromkostning /8/
CX omkostning for anvendelse af vindenergi /20/
xminstor minimumsbehov for energi på lageret /14.2/
xmaxstor maksimumsgrænse for energi på lageret /2485/
E lagereffektivitet /0.71/
cCO2 omkostning for udledning af CO2 /3.5/
Cpa punishment omkostning for ikke-imødekommen efterspørgsel /200/
Cpb punishment omkostning for at have overskydende energi /200/
;

Equations
ObjectiveFunction
Demand
Start_shut
Start
Shut
Production_1_min
Production_1_max
Storage_1_min
Storage_1_max
Storage_2
xstorinEq
xstoroutEq
;

ObjectiveFunction .. z =e= sum((g,t), (data(g,'cv')+cCO2*data(g,'eCO2'))*x(g,t)+data(g,'cu')*u(g,t)+data(g,'cstart')*v(g,t)+data(g,'cshut')*w(g,t))+sum(t,Cstor*(xstorout(t)+xstorin(t))+CX*Ps(t)+Cpa*a(t)+Cpb*b(t))
;

xstorinEq(t).. xstorin(t) =e= xstorina(t)/E
;

xstoroutEq(t).. xstorout(t) =e= xstorouta(t)/E
;

Demand(t) .. sum(g, x(g,t))+xstorouta(t)+a(t) =e= data_1(t,'GrossConsumptionMWh')-Ps(t)+xstorin(t)+b(t)
;

Start_shut(g,t)$(ord(t)>1) .. u(g,t)-u(g,t-1) =e= v(g,t)-w(g,t)
;

Start(g,t).. sum(h$ (ord(h) >= (ord(t) - data(g,'UT')+1) and (ord(h) <= ord(t))), v(g,h)) =l= u(g,t)
;

Shut(g,t).. sum(h$ (ord(h) >= (ord(t) - data(g,'DT')+1) and (ord(h) <= ord(t))), w(g,h)) =l= 1-u(g,t)
;

Production_1_min(g, t) ..  u(g,t) * data(g,'xmin') =l= x(g,t)
;

Production_1_max(g, t) ..  x(g,t) =l= u(g,t) * data(g,'xmax')
;

Storage_1_min(t) .. xminstor =l= xstor(t)
;

Storage_1_max(t) .. xstor(t) =l= xmaxstor
;

Storage_2(t)$(ord(t)>1) .. xstor(t) =e= xstor(t-1) - xstorout(t) + xstorina(t)
;

Model UC /all/;

loop(s,Ps(t)=P(t,s);

Solve UC using mip minimizing z;
R(s)=z.l;
JA(s,t)=a.l(t);
);

display R, JA;

execute_unload "WS.gdx" R
